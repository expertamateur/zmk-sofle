#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_up_down: scroll_up_down {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
        label = "SCROLL_UP_DOWN";
    };

    ctrl_dance: ctrl_dance {
        compatible = "zmk,behavior-tap-dance";
        label = "CTRL_DANCE";
        #binding-cells = <0>;
        bindings = <&kp LEFT_CONTROL>, <&kp RIGHT_CONTROL>;

        tapping-term-ms = <250>;
    };

    fn_tap: fn_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "FN_TAP";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        quick-tap-ms = <200>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <150>;
    };

    scroll_rl: scroll_rl {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

        tap-ms = <100>;
        label = "SCROLL_RL";
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp ESC      &kp N1     &kp N2        &kp N3       &kp N4           &kp N5                 &mmv MOVE_UP     &kp N6               &kp N7           &kp N8         &kp N9   &kp N0    &kp BACKSPACE
&kp TAB      &kp Q      &kp W         &kp E        &kp R            &kp T                  &mmv MOVE_DOWN   &kp Y                &kp U            &kp I          &kp O    &kp P     &kp BSLH
&lt 1 ENTER  &kp A      &kp S         &kp D        &kp F            &kp G                  &mmv MOVE_LEFT   &kp H                &kp J            &kp K          &kp L    &kp SEMI  &kp APOS
&kp LSHFT    &kp Z      &kp X         &kp C        &kp V            &kp B                  &mmv MOVE_RIGHT  &kp N                &kp M            &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE   &kp LCTRL  &kp LEFT_GUI  &ctrl_dance  &fn_tap 1 SPACE  &fn_tap 2 BACKSPACE    &mkp LCLK        &fn_tap 2 BACKSPACE  &fn_tap 1 SPACE  &kp RIGHT_ALT  &none    &none
            >;

            sensor-bindings = <&scroll_up_down>;
            display-name = "LAYER0";
        };

        fn1 {
            bindings = <
&trans  &trans     &trans    &trans     &trans  &trans    &trans  &kp KP_PLUS      &kp N7  &kp N8     &kp N9   &trans         &trans
&trans  &kp HOME   &kp UP    &kp END    &none   &trans    &trans  &kp KP_MINUS     &kp N4  &kp N5     &kp N6   &kp EQUAL      &trans
&trans  &kp LEFT   &kp DOWN  &kp RIGHT  &none   &trans    &trans  &kp KP_MULTIPLY  &kp N1  &kp N2     &kp N3   &kp SEMI       &kp SQT
&trans  &kp PG_UP  &none     &kp PG_DN  &none   &trans    &trans  &kp PERCENT      &kp N0  &kp COMMA  &kp DOT  &kp KP_DIVIDE  &trans
&trans  &trans     &trans    &trans     &trans  &trans    &trans  &trans           &trans  &trans     &trans   &trans
            >;

            sensor-bindings = <&scroll_rl>;
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &trans       &trans
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
